"use strict";(self.webpackChunkdocs_hackuarium_org=self.webpackChunkdocs_hackuarium_org||[]).push([[5831],{94704:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var t=n(11527),s=n(11683);const r={},a="Uploading the software",i={id:"spectro/assembling/software/README",title:"Uploading the software",description:"This step is generally optional, because we have already uploaded the software on the PCBs in the kits. If it's the case, just skip this section.",source:"@site/docs/01-spectro/02-assembling/04-software/README.md",sourceDirName:"01-spectro/02-assembling/04-software",slug:"/spectro/assembling/software/",permalink:"/docs/spectro/assembling/software/",draft:!1,unlisted:!1,editUrl:"https://github.com/hackuarium/docs.hackuarium.org/edit/main/docs/01-spectro/02-assembling/04-software/README.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Assembling the case",permalink:"/docs/spectro/assembling/case/"},next:{title:"The end",permalink:"/docs/spectro/assembling/end/"}},l={},c=[{value:"Power consumption",id:"power-consumption",level:2},{value:"Sleep mode: 1.10mA",id:"sleep-mode-110ma",level:3},{value:"Sleep mode, no ADC: 1.03mA",id:"sleep-mode-no-adc-103ma",level:3}];function d(e){const o={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o.h1,{id:"uploading-the-software",children:"Uploading the software"}),"\n",(0,t.jsx)(o.admonition,{type:"info",children:(0,t.jsx)(o.p,{children:"This step is generally optional, because we have already uploaded the software on the PCBs in the kits. If it's the case, just skip this section."})}),"\n",(0,t.jsx)(o.p,{children:"Once you finished soldering the PCB you need to burn the bootloader. This step enables the control of the device over USB."}),"\n",(0,t.jsx)(o.p,{children:"To burn the bootloader, first install the Arduino program and select 'Tools -> Board -> Lilypad Arduino USB'. You may then either use a 'tag-connector' connected to a USBTinyISP or a normal cable for ICSP (you will have to solder the IDC 6 pins socket in this case) to burn the bootloader. Click 'Tools -> Burn Bootloader'."}),"\n",(0,t.jsxs)(o.p,{children:["Once the bootloader has been burned you should be able to select the device from the Arduino program when it is connected with a USB cable. It should appear in 'Tools -> Port -> xxx Lilypad Arduino USB'. You can now open the ",(0,t.jsx)(o.a,{href:"https://github.com/Hackuarium/simple-spectro/tree/master/arduino",children:"Arduino project"})," and program the spectrophotometer."]}),"\n",(0,t.jsx)(o.p,{children:"In order to set reasonable parameters you should make a reset either from the Serial menu or from the LCD ('Utilities -> Reset'). The spectrophotometer is now ready to be used."}),"\n",(0,t.jsx)(o.h2,{id:"power-consumption",children:"Power consumption"}),"\n",(0,t.jsx)(o.p,{children:"In order to reduce the power consumption the device is put in sleep mode after 100 s of inactivity."}),"\n",(0,t.jsx)(o.p,{children:"Here are some tests using v1.6.1."}),"\n",(0,t.jsx)(o.p,{children:"Board consumption awake: 10mA"}),"\n",(0,t.jsx)(o.h3,{id:"sleep-mode-110ma",children:"Sleep mode: 1.10mA"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-c",children:"cli();\nsleep_enable();\nsei();\nsleep_cpu();\nsleep_disable();\n"})}),"\n",(0,t.jsx)(o.h3,{id:"sleep-mode-no-adc-103ma",children:"Sleep mode, no ADC: 1.03mA"}),"\n",(0,t.jsx)(o.p,{children:"Turning off ADC allows to win around 0.07A"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-c",children:"ADCSRA &= ~(1 << ADEN); // Disable ADC\n\ncli();\nsleep_enable();\nsei();\nsleep_cpu();\nsleep_disable();\n\nADCSRA |= (1 << ADEN); // enable A/D\n"})})]})}function p(e={}){const{wrapper:o}={...(0,s.a)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},11683:(e,o,n)=>{n.d(o,{Z:()=>i,a:()=>a});var t=n(50959);const s={},r=t.createContext(s);function a(e){const o=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function i(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(r.Provider,{value:o},e.children)}}}]);